/*
I want to try to make sure that each of the two teams have adequate contacts as they move through built up areas 
this will ID players with TL role, and spawn in targets between them and the current obj - here we assume this is 
their direction of travel 

need to aslo build a despawner check, and abuilding blacklist system - if you kill units in building x, then x is removed from potential building positions 

while any player on ground is in redzone, generate a building or compound-worth of targets 


notes:
this was previously always true during ISMISSIONLIVE, however I'd like to be able to use this without the 
mission running, for training etc, so i've removed that, and need to instead figure out a new way of triggering this 

idea for triggering:
run a check every x seconds to see whether there are any players away from base
if yes, then for now only check if they are a TL - we can change this to any player later if we want, but
this can be a gentle control mechanic for now. 

ACTION - make sure you can determine a player role in scripts 

so, once script has identified that a TL is in the field, it will run a spawner manager system 
this SMS will keep an eye on how many opfor are being generated by this system, and will also manage 
the despawning of generated units, as well as the building blacklist system 

NOTE - we need to ensure that opfor don't magically respawn in a building that was previously cleared - 
while it may happen IRL, for the game we'll keep it simple - if you clear a building, you clear it for good 

maybe a rule - a building is only perma-cleared (blacklisted) if all opfor are killed? To ensure full clearances are made 
and to debug this, we can gen a small marker on each building pos in the map when done 

ACTION - we must not spawn things on roofs - this will break immersion - so we need to be able to filter building 
positions by height.

/*
sarogahtyp
https://forums.bohemia.net/forums/topic/203610-solved-determine-if-buildingpos-is-indoors/
parameter 1: object of builing
parameter 2: height to check for a roof. default value is 10 meters

return value:  array of roofed builing positions

example call:
 _roofed_pos = [_house1, _maxheight] fnc_roofed_pos;

fnc_roofed_pos =
{
  _default_height = 10;
  params["_building", ["_height", _default_height]];
 ([_building] call BIS_fnc_buildingPositions select {lineIntersects [_x, (_x vectorAdd [0, 0, _height]) , objNull, objNull});
 or 
 _spawnPos = selectRandom ((_building buildingPos -1) select {lineIntersects [AGLToASL _x, (AGLToASL _x) vectorAdd [0,0,10]]});
};


*/


	
// choose a team leader // uses _playerRole = roleDescription player;
_TLs = []; // will hold Team Leaders in group
{
	if (roleDescription player == "Team Leader") then {
		_TLs pushBack _x;
	};
} forEach allPlayers;

_chosenTL = selectRandom _TLs;

_pos = getPos _chosenTL;
_base = getPos "ammo1";
_dist = _pos distance _base;

if (condition) then {
	// we can do stuff here 
	// first, set up a holding bool so only one spawn event happens at any one time 
	_invTask = true;
	while {_invTask} do {
		
		// find local building 
		// create baddies and or civvies 
		// create marker 
		// start dist check 
		// - despawn if too far away 
		// - send them to TL if close - 25% chance of this happening 
		// - work out how to 'not' spawn roofies 
		// - work out how to send opfor to a roof pos if it exists 



		sleep 300; 
	};
} else {
	systemChat format ["% TL was chosen, but is too close to base for autoSpawns", _chosenTL];
};


